---
import { Icon } from 'astro-icon/components';
import Image from '~/components/common/Image.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';

export interface Props {
  title?: string;
  subtitle?: string;
  tagline?: string;
  content?: string;
  highlights?: Array<{
    icon: string;
    title: string;
    description: string;
  }>;
  socialLinks?: Array<{
    icon: string;
    label: string;
    href: string;
  }>;
  image?: {
    src: string;
    alt: string;
  }
  id?: string;
  isDark?: boolean;
  classes?: Record<string, string>;
  bg?: string;
}

const {
  title = "About Me",
  subtitle = "Get to know more about my background, skills, and what drives me.",
  tagline = "Background",
  content = await Astro.slots.render('content'),
  highlights = [],
  socialLinks = [],
  image = await Astro.slots.render('image'),
  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-5xl ${classes?.container ?? ''}`} bg={bg}>
  <div class="grid grid-cols-1 md:grid-cols-2 gap-8 md:gap-12 items-center">
    <!-- Image Column -->
    <div class="order-2 md:order-1">
      <div class="relative">
        <!-- Profile Image with Card Effect -->
        {typeof image === 'string' ? (
          <Fragment set:html={image} />
        ) : (
          <div class="relative rounded-2xl overflow-hidden bg-white dark:bg-gray-800 shadow-xl border border-gray-100 dark:border-gray-700
                      transform transition-all duration-300 hover:shadow-2xl">
            <Image
              class="w-full h-auto aspect-square object-cover"
              widths={[400, 768]}
              width={500}
              height={500}
              loading="eager"
              {...image}
            />
          </div>
        )}
        
        <!-- Decorative elements -->
        <div class="absolute -bottom-6 -right-6 w-32 h-32 bg-dots rounded-full z-0"></div>
      </div>
    </div>
    
    <!-- Content Column -->
    <div class="order-1 md:order-2">
      {tagline && (
        <p class="inline-block px-3 py-1 text-xs font-medium tracking-wider text-indigo-700 uppercase bg-indigo-100 dark:bg-indigo-900/30 dark:text-indigo-300 rounded-full mb-4">
          {tagline}
        </p>
      )}
      
      <h2 class="text-3xl font-bold tracking-tight mb-4 border-b border-indigo-500 pb-2 inline-block">
        {title}
      </h2>
      
      <div class="text-gray-700 dark:text-gray-300 mb-8">
        {subtitle && <p class="text-xl mb-3">{subtitle}</p>}
        {content && <div set:html={content} />}
      </div>
      
      <!-- Social Links -->
      {socialLinks && socialLinks.length > 0 && (
        <div class="mb-8">
          <p class="text-gray-600 dark:text-gray-400 mb-3 font-medium">Connect with me:</p>
          <div class="flex flex-wrap gap-3">
            {socialLinks.map(({ icon, label, href }) => (
              <a 
                href={href} 
                class="flex items-center gap-2 bg-gray-100 dark:bg-gray-800 px-4 py-2 rounded-lg transition-all duration-300 
                       hover:bg-indigo-100 dark:hover:bg-indigo-900/30 hover:text-indigo-600 dark:hover:text-indigo-300" 
                target="_blank" 
                rel="noopener noreferrer"
              >
                <Icon name={icon} class="w-5 h-5" />
                <span>{label}</span>
              </a>
            ))}
          </div>
        </div>
      )}
      
      <!-- Highlights Cards -->
      {highlights && highlights.length > 0 && (
        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
          {highlights.map(({ icon, title, description }) => (
            <div class="bg-white dark:bg-gray-800 p-5 rounded-xl shadow-md border border-gray-100 dark:border-gray-700
                       transform transition-all duration-300 hover:shadow-lg hover:-translate-y-1">
              <div class="flex items-start">
                <div class="bg-indigo-100 dark:bg-indigo-900/30 p-3 rounded-lg mr-4">
                  <Icon name={icon} class="w-6 h-6 text-indigo-600 dark:text-indigo-400" />
                </div>
                <div>
                  <h3 class="font-semibold text-gray-900 dark:text-white mb-1">{title}</h3>
                  <p class="text-sm text-gray-600 dark:text-gray-400">{description}</p>
                </div>
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  </div>
</WidgetWrapper>

<style>
.bg-dots {
  background-image: radial-gradient(rgba(79, 70, 229, 0.1) 1px, transparent 1px);
  background-size: 20px 20px;
  opacity: 0.5;
}

:global(.dark) .bg-dots {
  background-image: radial-gradient(rgba(79, 70, 229, 0.2) 1px, transparent 1px);
  opacity: 0.3;
}
</style>