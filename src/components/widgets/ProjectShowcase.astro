---
import { Icon } from 'astro-icon/components';
import Image from '~/components/common/Image.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Button from '~/components/ui/Button.astro';

export interface Props {
  title?: string;
  subtitle?: string;
  tagline?: string;
  projects?: Array<{
    title: string;
    description: string;
    image: {
      src: string;
      alt: string;
    }
    tags?: string[];
    demoUrl?: string;
    sourceUrl?: string;
    blogUrl?: string; // New property for linking to blog posts/case studies
  }>;
  viewAllUrl?: string;
  id?: string;
  isDark?: boolean;
  classes?: Record<string, string>;
  bg?: string;
}

const {
  title = "Projects",
  subtitle = "Check out some of my latest work",
  tagline = "Portfolio",
  projects = [],
  viewAllUrl = "/projects",
  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl px-4 sm:px-6 ${classes?.container ?? ''}`} bg={bg}>
  <!-- Heading -->
  <div class="mb-8 sm:mb-12 text-center max-w-3xl mx-auto">
    {tagline && (
      <p class="font-mono inline-block px-3 py-1 text-xs tracking-wider text-primary uppercase bg-primary/10 dark:bg-primary/20 rounded-md border border-primary/20 dark:border-primary/30 mb-4">
        &lt;{tagline}/&gt;
      </p>
    )}
    <h2 class="text-3xl md:text-4xl font-bold font-heading tracking-tight mb-4">
      {title}
    </h2>
    {subtitle && <p class="text-xl sm:text-xl text-muted dark:text-muted">{subtitle}</p>}
  </div>

  <!-- Projects Grid - Repository Card Style -->
  {projects && projects.length > 0 && (
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 sm:gap-8">
      {projects.map((project) => (
        <div class="repo-card flex flex-col h-full overflow-hidden border border-gray-200 dark:border-gray-700 rounded-lg bg-white dark:bg-gray-950 shadow-md transition-all duration-300 hover:shadow-lg hover:-translate-y-1">
          <!-- Repository Header -->
          <div class="p-4 flex justify-between items-center border-b border-gray-200 dark:border-gray-700">
            <div class="flex items-center">
              <Icon name="tabler:folder-code" class="w-5 h-5 text-primary mr-2" />
              <h3 class="font-mono font-bold text-gray-800 dark:text-gray-100 truncate">
                {project.title}
              </h3>
            </div>
            <div class="text-xs px-2 py-1 rounded-full bg-primary/10 dark:bg-primary/20 text-primary flex items-center">
              <Icon name="tabler:star" class="w-3.5 h-3.5 mr-1" />
              <span>Project</span>
            </div>
          </div>
          
          <!-- Project Image -->
          <div class="relative">
            {typeof project.image === 'string' ? (
              <Fragment set:html={project.image} />
            ) : (
              <Image
                class="w-full h-48 object-cover"
                widths={[300, 400, 600]}
                width={400}
                height={225}
                {...project.image}
              />
            )}
          </div>
          
          <!-- Project Details/Description -->
          <div class="p-4 flex-grow">
            <p class="text-gray-600 dark:text-gray-300 mb-4">
              {project.description.length > 120 
                ? project.description.slice(0, 120) + '...' 
                : project.description}
            </p>
            
            <!-- Tags -->
            <div class="flex flex-wrap gap-2 mb-4">
              {project.tags && project.tags.length > 0 && (
                project.tags.map(tag => (
                  <span class="font-mono text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300">
                    {tag}
                  </span>
                ))
              )}
            </div>
          </div>
          
          <!-- Repository Footer -->
          <div class="p-4 border-t border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-950 mt-auto">
            <div class="flex flex-wrap gap-4 justify-between">
              <!-- Demo Link -->
              {project.demoUrl && (
                <a href={project.demoUrl} class="flex items-center text-primary hover:text-primary/80 transition-colors text-sm font-medium">
                  <Icon name="tabler:external-link" class="w-4 h-4 mr-1" />
                  <span>View Project</span>
                </a>
              )}
              
              <!-- Blog/Case Study Link -->
              {project.blogUrl && (
                <a href={project.blogUrl} class="flex items-center text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-200 transition-colors text-sm font-medium">
                  <Icon name="tabler:file-text" class="w-4 h-4 mr-1" />
                  <span>Case Study</span>
                </a>
              )}
              
              {/* 
              <!-- Source Link -->
              {project.sourceUrl && (
                <a href={project.sourceUrl} class="flex items-center text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-200 transition-colors text-sm font-medium">
                  <Icon name="tabler:code" class="w-4 h-4 mr-1" />
                  <span>Source</span>
                </a>
              )} 
              */}
            </div>
          </div>
        </div>
      ))}
    </div>
  )}
  
  <!-- View All Button -->
  {viewAllUrl && projects && projects.length > 0 && (
    <div class="mt-8 sm:mt-12 text-center">
      <Button href={viewAllUrl} variant="primary" class="group">
        <span>View All Projects</span>
        <Icon name="tabler:arrow-right" class="w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform" />
      </Button>
    </div>
  )}
</WidgetWrapper>