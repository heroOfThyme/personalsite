---
import { Icon } from 'astro-icon/components';
import Image from '~/components/common/Image.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Button from '~/components/ui/Button.astro';

export interface Props {
  title?: string;
  subtitle?: string;
  tagline?: string;
  projects?: Array<{
    title: string;
    description: string;
    image: {
      src: string;
      alt: string;
    }
    tags?: string[];
    demoUrl?: string;
    sourceUrl?: string;
    blogUrl?: string; // New property for linking to blog posts/case studies
  }>;
  viewAllUrl?: string;
  id?: string;
  isDark?: boolean;
  classes?: Record<string, string>;
  bg?: string;
}

const {
  title = "Projects",
  subtitle = "Check out some of my latest work",
  tagline = "Portfolio",
  projects = [],
  viewAllUrl = "/projects",
  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl px-4 sm:px-6 ${classes?.container ?? ''}`} bg={bg}>
  <!-- Heading -->
  <div class="mb-8 sm:mb-12 text-center max-w-3xl mx-auto">
    {tagline && (
      <p class="font-mono inline-block px-3 py-1 text-xs tracking-wider text-primary uppercase bg-primary/10 dark:bg-primary/20 rounded-md border border-primary/20 dark:border-primary/30 mb-4">
        &lt;{tagline}/&gt;
      </p>
    )}
    <h2 class="text-3xl md:text-4xl font-bold font-heading tracking-tight mb-4">
      {title}
    </h2>
    {subtitle && <p class="text-xl sm:text-xl text-muted dark:text-muted">{subtitle}</p>}
  </div>

  <!-- Projects Grid - Repository Card Style -->
<!-- Projects Grid - Repository Card Style -->
{projects && projects.length > 0 && (
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 sm:gap-8">
    {projects.map((project) => (
      <div class="bg-white dark:bg-gray-950 rounded-lg shadow-md overflow-hidden border border-gray-200 dark:border-gray-700 transition-all duration-300 hover:shadow-lg hover:-translate-y-1 flex flex-col h-full">
        <!-- Repository Header -->
        <div class="bg-gray-50 dark:bg-gray-950 px-4 py-2 border-b border-gray-200 dark:border-gray-600 flex items-center justify-between">
          <div class="flex items-center">
            <Icon name="tabler:folder" class="w-4 h-4 text-primary mr-2" />
            <span class="font-mono text-sm font-medium truncate">{project.title}</span>
          </div>
          <div class="text-xs font-mono text-primary bg-primary/10 dark:bg-primary/20 px-2 py-0.5 rounded-full">
            project
          </div>
        </div>
        
        <!-- Project Image -->
        <div class="h-48 overflow-hidden">
          {typeof project.image === 'string' ? (
            <Fragment set:html={project.image} />
          ) : (
            <Image
              src={project.image.src}
              alt={project.image.alt}
              class="w-full h-full object-cover"
              width={400}
              height={225}
              aspectRatio="16:9"
            />
          )}
        </div>
        
        <!-- Project Details/Description -->
        <div class="p-6 flex-grow">
          <h3 class="text-xl font-bold mb-2">{project.title}</h3>
          <p class="text-muted dark:text-muted mb-4 line-clamp-3">
            {project.description}
          </p>
          
          <!-- Tags -->
          <div class="mb-4">
            <div class="flex flex-wrap gap-2">
              {project.tags && project.tags.length > 0 && (
                project.tags.map(tag => (
                  <span class="font-mono text-xs px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-full">
                    {tag}
                  </span>
                ))
              )}
            </div>
          </div>
        </div>
        
        <!-- Repository Footer -->
        <div class="p-4 bg-gray-50 dark:bg-gray-950 mt-auto border-t border-gray-200 dark:border-gray-600">
          <div class="flex justify-between">
            {project.demoUrl && (
              <a href={project.demoUrl} class="text-primary hover:text-primary-600 dark:hover:text-primary-400 font-medium inline-flex items-center gap-1 transition-colors">
                <Icon name="tabler:external-link" class="w-4 h-4" />
                <span>View Project</span>
              </a>
            )}
            
            {project.blogUrl && (
              <a href={project.blogUrl} class="text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-200 font-medium inline-flex items-center gap-1 transition-colors">
                <Icon name="tabler:file-text" class="w-4 h-4" />
                <span>Case Study</span>
              </a>
            )}
          </div>
        </div>
      </div>
    ))}
  </div>
)}
  
  <!-- View All Button -->
  {viewAllUrl && projects && projects.length > 0 && (
    <div class="mt-8 sm:mt-12 text-center">
      <Button href={viewAllUrl} variant="primary" class="group">
        <span>View All Projects</span>
        <Icon name="tabler:arrow-right" class="w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform" />
      </Button>
    </div>
  )}
</WidgetWrapper>